Centered Signal Constellation
signal_point = cos(2*pi()*1000*t(1,n))*amplitude;
signal_point = sin(2*pi()*1000*t(1,n))*amplitude;

Empirical tuning of carrier amplitude and bit interval
Note: See repo README.md

Separating parameters into constants class
1. Parameter tuning was greatly improved after separating parameters into constants class.

Adaptive amplitude from energy budget
1. Calculate the energy based on modulation scheme, based on bit interval, carrier function.
2. Based on projected total energy use, calculate the amplitude scalar.
Note: This makes sure that we use all of our energy, no more and no less.
Observation: As long as we change amplitude/energy with respect to bit_interval, neither bit_interval nor ampltude affects the final score. In other words, we can transmit as fast as possible (by having small bit_interval but high power use--fast and hard) or we can transmit as slow as possible (long bit interval and low power--slow and steady).

Choosing/optimizing how many bits to send in total
1. Given a specific energy budget, find the balance between bits to send (N in the final score) and accuracy (cross entropy)
2. Result/findings: If we consider the final result as the loss function, the loss the global maxima of the loss surface happens when we send all 10000 bits. In other words, the optimal strategy so far is to send ALL bits provided. In the final score equation, N dominates while binary entropy doesn't change much for N ~= 10000 This is observed by empirical parameter tuning.

Ack/Nack

resent tolerance. Lower to 2 or 1 when we don't have enough energy to cover the rest. Receiver needs to keep track of energy budget of sender.


Noise analyzation:

Sit and observe the noise for a while. Then model its variance sigma.

Adaptive frequency hopping
Comment: Can be used as a 
1. Observation: r_trans and r_reci does know what's going on with the noise. We can stop sending and analyze the noise.
2. Since we have shown that 

Dynamically initialize constants based on channel noise profile

Uselessness of receiver channel
1. We chose not to use the feedback channel based on the following observation.
2. Proof/Deduction: Since both sender and receiver have access to the identical copy in both channels, there is no information that receiver has that sender does not. This means that the sender cannot gain any information (here we use the adult definition of information) by utilizing the receiver channel.
3. Note: technically, the only information receiver has that sender does not have is initla_e_rec, but since we are not using receiver channel, this information is useless.